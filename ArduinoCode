#include <dht.h>
#include<SoftwareSerial.h> 
#include <LiquidCrystal_I2C.h>   //install the library
#include <Wire.h>                //install the library
LiquidCrystal_I2C lcd(0x27, 16, 2);
#define dht_pin A0  
dht DHT;
#define DELAY 500 
#define VIN 5
#define R 100
#define relay1 2   
#define relay2 3
#define relay3 4
#define relay4 5
#define RxD 11
#define TxD 10
SoftwareSerial B(RxD,TxD);
const int sensorPin = A1;
int currentSensor = A2;
float current = 0;
float voltage = 5;
float power = 0;
int sensorVal; 
int lux; 
 
void setup()
{
  Serial.begin(9600);
  B.begin(9600);
  lcd.begin(16,2);
  lcd.backlight();
  delay(500);
  Serial.println("Load Automation\n\n");
  delay(1000);
  pinMode(relay1,OUTPUT);
  pinMode(relay2,OUTPUT);
  pinMode(relay3,OUTPUT);
  pinMode(relay4,OUTPUT);
}
 
void loop()
{
    int sensorValue = analogRead(currentSensor);
  float voltage = sensorValue * 5.0 / 1024.0;
  current = (2.5 - voltage) / 0.185;
  power = 12 * current;
  Serial.print("Current: ");
  Serial.print(current);
  Serial.print(" A, Power: ");
  Serial.print(power);
  Serial.println(" W");
  
  DHT.read11(dht_pin);
  Serial.print("Temperature = ");
  Serial.print(DHT.temperature); 
  Serial.println(" C");
  sensorVal = analogRead(sensorPin);
  lux=sensorRawToPhys(sensorVal); 
  Serial.print("Illumination = ");
  Serial.print(lux); 
  Serial.println("  Intensity"); 
  Serial.print('\n'); 
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Temp:");
  lcd.print(DHT.temperature);
  lcd.print(" Lumens:");
  lcd.print(lux);
   delay(DELAY);
if (lux < 2400 && DHT.temperature < 28) {      
    digitalWrite(relay1, LOW);
    digitalWrite(relay2, LOW);
    digitalWrite(relay3,LOW);
    digitalWrite(relay4, HIGH);
    B.print("ON");
    B.print(",");
    B.print("ON");
    B.print(",");
    B.print("ON");
    B.print(",");
    B.print("OFF");
    B.print(";");
  } else if (lux > 2400 && DHT.temperature >30) {   
    digitalWrite(relay1, HIGH);
    digitalWrite(relay2, HIGH);
    digitalWrite(relay3, HIGH);
    digitalWrite(relay4,  LOW);
    B.print("OFF");
    B.print(",");
    B.print("OFF");
    B.print(",");
    B.print("OFF");
    B.print(",");
    B.print("ON");
    B.print(";");
  } else if (lux > 2400 && DHT.temperature <=30) {   
    digitalWrite(relay1, HIGH);
    digitalWrite(relay2, HIGH);
    digitalWrite(relay3, HIGH );
    digitalWrite(relay4, HIGH);
    B.print("OFF");
    B.print(",");
    B.print("OFF");
    B.print(",");
    B.print("OFF");
    B.print(",");
    B.print("OFF");
    B.print(";");
  } else if (lux < 2400 && DHT.temperature >28) {                                 
    digitalWrite(relay1, LOW);
    digitalWrite(relay2, LOW);
    digitalWrite(relay3, LOW);
    digitalWrite(relay4, LOW);
    B.print("ON");
    B.print(",");
    B.print("ON");
    B.print(",");
    B.print("ON");
    B.print(",");
    B.print("ON");
    B.print(";");
  }
  delay(1000); 
}
int sensorRawToPhys(int raw)
{ 
  float Vout = float(raw) * (VIN / float(1023));// Conversion analog to voltage
  float RLDR = (R * (VIN - Vout))/Vout; // Conversion voltage to resistance
  int phys=500/(RLDR/1000); // Conversion resitance to lumen
  return phys;
}
